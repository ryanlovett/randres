import numpy as np

def get_name(race, gend, existing_names=[[],[]]):
	names = {'White': {
				'Female': ['Allison', 'Anne', 'Carrie', 'Emily', 'Jill', 'Laurie', 'Kristen',
	        	           'Meredith', 'Sarah'],
	       		'Male': ['Brad', 'Brendan', 'Geoffrey', 'Greg', 'Brett', 'Jay', 'Matthew',
	    			     'Neil', 'Todd'],
	       		'Last': ['Stoltzfus', 'Byler', 'Hershberger', 'Troyer', 'Yoder',
	  				     'Burkholder', 'Hostetler', 'Graber', 'Mast', 'Roush'],
					},
			 'Black': {
			 	'Female': ['Aisha', 'Ebony', 'Keisha', 'Kenya', 'Latonya', 'Lakisha',
      					   'Latoya', 'Tamika', 'Tanisha'],
			 	'Male': ['Darnell', 'Hakim', 'Jermaine', 'Kareem', 'Jamal', 'Leroy',
    				     'Rasheed', 'Tremayne', 'Tyrone'],
			 	'Last': ['Smalls', 'Washington', 'Pierre', 'Muhammad', 'Hairston', 'Ruffin',
      					 'Alston', 'Chatman', 'Francois', 'Battle']
			 		}		
			}

	email_base = {('Darnell', 'Smalls'): 'dsmalls14430',
		 ('Darnell', 'Washington'): 'dwashington86761',
		 ('Darnell', 'Pierre'): 'dpierre15579',
		 ('Darnell', 'Muhammad'): 'dmuhammad22233',
		 ('Darnell', 'Hairston'): 'dhairston54761',
		 ('Darnell', 'Ruffin'): 'druffin3658',
		 ('Darnell', 'Alston'): 'dalston28533',
		 ('Darnell', 'Chatman'): 'dchatman63159',
		 ('Darnell', 'Francois'): 'dfrancois60456',
		 ('Darnell', 'Battle'): 'dbattle75150',
		 ('Hakim', 'Smalls'): 'hsmalls92660',
		 ('Hakim', 'Washington'): 'hwashington82222',
		 ('Hakim', 'Pierre'): 'hpierre22830',
		 ('Hakim', 'Muhammad'): 'hmuhammad24958',
		 ('Hakim', 'Hairston'): 'hhairston82798',
		 ('Hakim', 'Ruffin'): 'hruffin50317',
		 ('Hakim', 'Alston'): 'halston84712',
		 ('Hakim', 'Chatman'): 'hchatman54852',
		 ('Hakim', 'Francois'): 'hfrancois81721',
		 ('Hakim', 'Battle'): 'hbattle57144',
		 ('Jermaine', 'Smalls'): 'jsmalls56406',
		 ('Jermaine', 'Washington'): 'jwashington71466',
		 ('Jermaine', 'Pierre'): 'jpierre56271',
		 ('Jermaine', 'Muhammad'): 'jmuhammad89627',
		 ('Jermaine', 'Hairston'): 'jhairston53048',
		 ('Jermaine', 'Ruffin'): 'jruffin66125',
		 ('Jermaine', 'Alston'): 'jalston27117',
		 ('Jermaine', 'Chatman'): 'jchatman42277',
		 ('Jermaine', 'Francois'): 'jfrancois63013',
		 ('Jermaine', 'Battle'): 'jbattle10771',
		 ('Kareem', 'Smalls'): 'ksmalls66577',
		 ('Kareem', 'Washington'): 'kwashington74160',
		 ('Kareem', 'Pierre'): 'kpierre15529',
		 ('Kareem', 'Muhammad'): 'kmuhammad72321',
		 ('Kareem', 'Hairston'): 'khairston66380',
		 ('Kareem', 'Ruffin'): 'kruffin69333',
		 ('Kareem', 'Alston'): 'kalston24473',
		 ('Kareem', 'Chatman'): 'kchatman18903',
		 ('Kareem', 'Francois'): 'kfrancois44431',
		 ('Kareem', 'Battle'): 'kbattle22341',
		 ('Jamal', 'Smalls'): 'jsmalls2577',
		 ('Jamal', 'Washington'): 'jwashington50434',
		 ('Jamal', 'Pierre'): 'jpierre99468',
		 ('Jamal', 'Muhammad'): 'jmuhammad64980',
		 ('Jamal', 'Hairston'): 'jhairston97491',
		 ('Jamal', 'Ruffin'): 'jruffin14510',
		 ('Jamal', 'Alston'): 'jalston18081',
		 ('Jamal', 'Chatman'): 'jchatman32211',
		 ('Jamal', 'Francois'): 'jfrancois99781',
		 ('Jamal', 'Battle'): 'jbattle38715',
		 ('Leroy', 'Smalls'): 'lsmalls21546',
		 ('Leroy', 'Washington'): 'lwashington30250',
		 ('Leroy', 'Pierre'): 'lpierre14946',
		 ('Leroy', 'Muhammad'): 'lmuhammad10414',
		 ('Leroy', 'Hairston'): 'lhairston76312',
		 ('Leroy', 'Ruffin'): 'lruffin22154',
		 ('Leroy', 'Alston'): 'lalston87453',
		 ('Leroy', 'Chatman'): 'lchatman10040',
		 ('Leroy', 'Francois'): 'lfrancois29064',
		 ('Leroy', 'Battle'): 'lbattle35859',
		 ('Rasheed', 'Smalls'): 'rsmalls56129',
		 ('Rasheed', 'Washington'): 'rwashington64895',
		 ('Rasheed', 'Pierre'): 'rpierre45276',
		 ('Rasheed', 'Muhammad'): 'rmuhammad15703',
		 ('Rasheed', 'Hairston'): 'rhairston6851',
		 ('Rasheed', 'Ruffin'): 'rruffin22554',
		 ('Rasheed', 'Alston'): 'ralston75374',
		 ('Rasheed', 'Chatman'): 'rchatman35297',
		 ('Rasheed', 'Francois'): 'rfrancois17793',
		 ('Rasheed', 'Battle'): 'rbattle67926',
		 ('Tremayne', 'Smalls'): 'tsmalls9126',
		 ('Tremayne', 'Washington'): 'twashington46555',
		 ('Tremayne', 'Pierre'): 'tpierre8011',
		 ('Tremayne', 'Muhammad'): 'tmuhammad94310',
		 ('Tremayne', 'Hairston'): 'thairston35679',
		 ('Tremayne', 'Ruffin'): 'truffin71274',
		 ('Tremayne', 'Alston'): 'talston53659',
		 ('Tremayne', 'Chatman'): 'tchatman92775',
		 ('Tremayne', 'Francois'): 'tfrancois98108',
		 ('Tremayne', 'Battle'): 'tbattle88033',
		 ('Tyrone', 'Smalls'): 'tsmalls5600',
		 ('Tyrone', 'Washington'): 'twashington75328',
		 ('Tyrone', 'Pierre'): 'tpierre69071',
		 ('Tyrone', 'Muhammad'): 'tmuhammad79717',
		 ('Tyrone', 'Hairston'): 'thairston74595',
		 ('Tyrone', 'Ruffin'): 'truffin33209',
		 ('Tyrone', 'Alston'): 'talston27539',
		 ('Tyrone', 'Chatman'): 'tchatman8828',
		 ('Tyrone', 'Francois'): 'tfrancois17018',
		 ('Tyrone', 'Battle'): 'tbattle20606',
		 ('Aisha', 'Smalls'): 'asmalls95597',
		 ('Aisha', 'Washington'): 'awashington88142',
		 ('Aisha', 'Pierre'): 'apierre72529',
		 ('Aisha', 'Muhammad'): 'amuhammad94840',
		 ('Aisha', 'Hairston'): 'ahairston31073',
		 ('Aisha', 'Ruffin'): 'aruffin43279',
		 ('Aisha', 'Alston'): 'aalston85640',
		 ('Aisha', 'Chatman'): 'achatman96869',
		 ('Aisha', 'Francois'): 'afrancois11686',
		 ('Aisha', 'Battle'): 'abattle40263',
		 ('Ebony', 'Smalls'): 'esmalls14122',
		 ('Ebony', 'Washington'): 'ewashington28269',
		 ('Ebony', 'Pierre'): 'epierre95347',
		 ('Ebony', 'Muhammad'): 'emuhammad73406',
		 ('Ebony', 'Hairston'): 'ehairston76240',
		 ('Ebony', 'Ruffin'): 'eruffin91638',
		 ('Ebony', 'Alston'): 'ealston30307',
		 ('Ebony', 'Chatman'): 'echatman72085',
		 ('Ebony', 'Francois'): 'efrancois50509',
		 ('Ebony', 'Battle'): 'ebattle45167',
		 ('Keisha', 'Smalls'): 'ksmalls91838',
		 ('Keisha', 'Washington'): 'kwashington24315',
		 ('Keisha', 'Pierre'): 'kpierre68033',
		 ('Keisha', 'Muhammad'): 'kmuhammad82687',
		 ('Keisha', 'Hairston'): 'khairston63786',
		 ('Keisha', 'Ruffin'): 'kruffin41673',
		 ('Keisha', 'Alston'): 'kalston92906',
		 ('Keisha', 'Chatman'): 'kchatman3731',
		 ('Keisha', 'Francois'): 'kfrancois67227',
		 ('Keisha', 'Battle'): 'kbattle24974',
		 ('Kenya', 'Smalls'): 'ksmalls67090',
		 ('Kenya', 'Washington'): 'kwashington69107',
		 ('Kenya', 'Pierre'): 'kpierre31409',
		 ('Kenya', 'Muhammad'): 'kmuhammad48961',
		 ('Kenya', 'Hairston'): 'khairston89735',
		 ('Kenya', 'Ruffin'): 'kruffin81563',
		 ('Kenya', 'Alston'): 'kalston38982',
		 ('Kenya', 'Chatman'): 'kchatman87224',
		 ('Kenya', 'Francois'): 'kfrancois78821',
		 ('Kenya', 'Battle'): 'kbattle60015',
		 ('Latonya', 'Smalls'): 'lsmalls72589',
		 ('Latonya', 'Washington'): 'lwashington80227',
		 ('Latonya', 'Pierre'): 'lpierre5692',
		 ('Latonya', 'Muhammad'): 'lmuhammad78378',
		 ('Latonya', 'Hairston'): 'lhairston99574',
		 ('Latonya', 'Ruffin'): 'lruffin92921',
		 ('Latonya', 'Alston'): 'lalston68247',
		 ('Latonya', 'Chatman'): 'lchatman77386',
		 ('Latonya', 'Francois'): 'lfrancois39311',
		 ('Latonya', 'Battle'): 'lbattle62218',
		 ('Lakisha', 'Smalls'): 'lsmalls39751',
		 ('Lakisha', 'Washington'): 'lwashington84006',
		 ('Lakisha', 'Pierre'): 'lpierre68410',
		 ('Lakisha', 'Muhammad'): 'lmuhammad36224',
		 ('Lakisha', 'Hairston'): 'lhairston42397',
		 ('Lakisha', 'Ruffin'): 'lruffin63023',
		 ('Lakisha', 'Alston'): 'lalston57956',
		 ('Lakisha', 'Chatman'): 'lchatman88470',
		 ('Lakisha', 'Francois'): 'lfrancois14052',
		 ('Lakisha', 'Battle'): 'lbattle78434',
		 ('Latoya', 'Smalls'): 'lsmalls44861',
		 ('Latoya', 'Washington'): 'lwashington64811',
		 ('Latoya', 'Pierre'): 'lpierre5363',
		 ('Latoya', 'Muhammad'): 'lmuhammad16499',
		 ('Latoya', 'Hairston'): 'lhairston81654',
		 ('Latoya', 'Ruffin'): 'lruffin22975',
		 ('Latoya', 'Alston'): 'lalston39429',
		 ('Latoya', 'Chatman'): 'lchatman55005',
		 ('Latoya', 'Francois'): 'lfrancois55913',
		 ('Latoya', 'Battle'): 'lbattle2632',
		 ('Tamika', 'Smalls'): 'tsmalls14033',
		 ('Tamika', 'Washington'): 'twashington57587',
		 ('Tamika', 'Pierre'): 'tpierre11121',
		 ('Tamika', 'Muhammad'): 'tmuhammad1702',
		 ('Tamika', 'Hairston'): 'thairston87597',
		 ('Tamika', 'Ruffin'): 'truffin17923',
		 ('Tamika', 'Alston'): 'talston32595',
		 ('Tamika', 'Chatman'): 'tchatman43799',
		 ('Tamika', 'Francois'): 'tfrancois77034',
		 ('Tamika', 'Battle'): 'tbattle48860',
		 ('Tanisha', 'Smalls'): 'tsmalls60857',
		 ('Tanisha', 'Washington'): 'twashington95706',
		 ('Tanisha', 'Pierre'): 'tpierre46847',
		 ('Tanisha', 'Muhammad'): 'tmuhammad44679',
		 ('Tanisha', 'Hairston'): 'thairston40882',
		 ('Tanisha', 'Ruffin'): 'truffin1104',
		 ('Tanisha', 'Alston'): 'talston28529',
		 ('Tanisha', 'Chatman'): 'tchatman29202',
		 ('Tanisha', 'Francois'): 'tfrancois61234',
		 ('Tanisha', 'Battle'): 'tbattle65010',
		 ('Brad', 'Stoltzfus'): 'bstoltzfus75042',
		 ('Brad', 'Byler'): 'bbyler36066',
		 ('Brad', 'Hershberger'): 'bhershberger78667',
		 ('Brad', 'Troyer'): 'btroyer99010',
		 ('Brad', 'Yoder'): 'byoder53876',
		 ('Brad', 'Burkholder'): 'bburkholder76896',
		 ('Brad', 'Hostetler'): 'bhostetler16432',
		 ('Brad', 'Graber'): 'bgraber75868',
		 ('Brad', 'Mast'): 'bmast38434',
		 ('Brad', 'Roush'): 'broush26368',
		 ('Brendan', 'Stoltzfus'): 'bstoltzfus65602',
		 ('Brendan', 'Byler'): 'bbyler75458',
		 ('Brendan', 'Hershberger'): 'bhershberger66285',
		 ('Brendan', 'Troyer'): 'btroyer63289',
		 ('Brendan', 'Yoder'): 'byoder78672',
		 ('Brendan', 'Burkholder'): 'bburkholder94310',
		 ('Brendan', 'Hostetler'): 'bhostetler65893',
		 ('Brendan', 'Graber'): 'bgraber41861',
		 ('Brendan', 'Mast'): 'bmast60634',
		 ('Brendan', 'Roush'): 'broush2827',
		 ('Geoffrey', 'Stoltzfus'): 'gstoltzfus33375',
		 ('Geoffrey', 'Byler'): 'gbyler75347',
		 ('Geoffrey', 'Hershberger'): 'ghershberger19789',
		 ('Geoffrey', 'Troyer'): 'gtroyer52898',
		 ('Geoffrey', 'Yoder'): 'gyoder66619',
		 ('Geoffrey', 'Burkholder'): 'gburkholder23778',
		 ('Geoffrey', 'Hostetler'): 'ghostetler56155',
		 ('Geoffrey', 'Graber'): 'ggraber64669',
		 ('Geoffrey', 'Mast'): 'gmast60230',
		 ('Geoffrey', 'Roush'): 'groush36350',
		 ('Greg', 'Stoltzfus'): 'gstoltzfus80082',
		 ('Greg', 'Byler'): 'gbyler54722',
		 ('Greg', 'Hershberger'): 'ghershberger45140',
		 ('Greg', 'Troyer'): 'gtroyer86003',
		 ('Greg', 'Yoder'): 'gyoder95868',
		 ('Greg', 'Burkholder'): 'gburkholder83984',
		 ('Greg', 'Hostetler'): 'ghostetler40045',
		 ('Greg', 'Graber'): 'ggraber47771',
		 ('Greg', 'Mast'): 'gmast58301',
		 ('Greg', 'Roush'): 'groush72325',
		 ('Brett', 'Stoltzfus'): 'bstoltzfus73320',
		 ('Brett', 'Byler'): 'bbyler69065',
		 ('Brett', 'Hershberger'): 'bhershberger48640',
		 ('Brett', 'Troyer'): 'btroyer5482',
		 ('Brett', 'Yoder'): 'byoder58770',
		 ('Brett', 'Burkholder'): 'bburkholder19616',
		 ('Brett', 'Hostetler'): 'bhostetler88375',
		 ('Brett', 'Graber'): 'bgraber65183',
		 ('Brett', 'Mast'): 'bmast45768',
		 ('Brett', 'Roush'): 'broush97585',
		 ('Jay', 'Stoltzfus'): 'jstoltzfus37684',
		 ('Jay', 'Byler'): 'jbyler65268',
		 ('Jay', 'Hershberger'): 'jhershberger60985',
		 ('Jay', 'Troyer'): 'jtroyer99468',
		 ('Jay', 'Yoder'): 'jyoder24520',
		 ('Jay', 'Burkholder'): 'jburkholder16286',
		 ('Jay', 'Hostetler'): 'jhostetler66099',
		 ('Jay', 'Graber'): 'jgraber72363',
		 ('Jay', 'Mast'): 'jmast33124',
		 ('Jay', 'Roush'): 'jroush49766',
		 ('Matthew', 'Stoltzfus'): 'mstoltzfus62656',
		 ('Matthew', 'Byler'): 'mbyler61417',
		 ('Matthew', 'Hershberger'): 'mhershberger21215',
		 ('Matthew', 'Troyer'): 'mtroyer84320',
		 ('Matthew', 'Yoder'): 'myoder39022',
		 ('Matthew', 'Burkholder'): 'mburkholder4480',
		 ('Matthew', 'Hostetler'): 'mhostetler80858',
		 ('Matthew', 'Graber'): 'mgraber85665',
		 ('Matthew', 'Mast'): 'mmast51316',
		 ('Matthew', 'Roush'): 'mroush5242',
		 ('Neil', 'Stoltzfus'): 'nstoltzfus10199',
		 ('Neil', 'Byler'): 'nbyler54526',
		 ('Neil', 'Hershberger'): 'nhershberger2440',
		 ('Neil', 'Troyer'): 'ntroyer78460',
		 ('Neil', 'Yoder'): 'nyoder78371',
		 ('Neil', 'Burkholder'): 'nburkholder55593',
		 ('Neil', 'Hostetler'): 'nhostetler18453',
		 ('Neil', 'Graber'): 'ngraber5662',
		 ('Neil', 'Mast'): 'nmast78619',
		 ('Neil', 'Roush'): 'nroush98700',
		 ('Todd', 'Stoltzfus'): 'tstoltzfus97819',
		 ('Todd', 'Byler'): 'tbyler72399',
		 ('Todd', 'Hershberger'): 'thershberger26289',
		 ('Todd', 'Troyer'): 'ttroyer31880',
		 ('Todd', 'Yoder'): 'tyoder71748',
		 ('Todd', 'Burkholder'): 'tburkholder6755',
		 ('Todd', 'Hostetler'): 'thostetler24921',
		 ('Todd', 'Graber'): 'tgraber33387',
		 ('Todd', 'Mast'): 'tmast34789',
		 ('Todd', 'Roush'): 'troush25601',
		 ('Allison', 'Stoltzfus'): 'astoltzfus9734',
		 ('Allison', 'Byler'): 'abyler77463',
		 ('Allison', 'Hershberger'): 'ahershberger79010',
		 ('Allison', 'Troyer'): 'atroyer70958',
		 ('Allison', 'Yoder'): 'ayoder97454',
		 ('Allison', 'Burkholder'): 'aburkholder8491',
		 ('Allison', 'Hostetler'): 'ahostetler12022',
		 ('Allison', 'Graber'): 'agraber62734',
		 ('Allison', 'Mast'): 'amast59451',
		 ('Allison', 'Roush'): 'aroush49884',
		 ('Anne', 'Stoltzfus'): 'astoltzfus15946',
		 ('Anne', 'Byler'): 'abyler31385',
		 ('Anne', 'Hershberger'): 'ahershberger67914',
		 ('Anne', 'Troyer'): 'atroyer20561',
		 ('Anne', 'Yoder'): 'ayoder21979',
		 ('Anne', 'Burkholder'): 'aburkholder37562',
		 ('Anne', 'Hostetler'): 'ahostetler32775',
		 ('Anne', 'Graber'): 'agraber29416',
		 ('Anne', 'Mast'): 'amast20128',
		 ('Anne', 'Roush'): 'aroush8964',
		 ('Carrie', 'Stoltzfus'): 'cstoltzfus24348',
		 ('Carrie', 'Byler'): 'cbyler20999',
		 ('Carrie', 'Hershberger'): 'chershberger97140',
		 ('Carrie', 'Troyer'): 'ctroyer22368',
		 ('Carrie', 'Yoder'): 'cyoder65061',
		 ('Carrie', 'Burkholder'): 'cburkholder84469',
		 ('Carrie', 'Hostetler'): 'chostetler62030',
		 ('Carrie', 'Graber'): 'cgraber99227',
		 ('Carrie', 'Mast'): 'cmast61683',
		 ('Carrie', 'Roush'): 'croush65384',
		 ('Emily', 'Stoltzfus'): 'estoltzfus44453',
		 ('Emily', 'Byler'): 'ebyler60474',
		 ('Emily', 'Hershberger'): 'ehershberger26490',
		 ('Emily', 'Troyer'): 'etroyer96693',
		 ('Emily', 'Yoder'): 'eyoder43306',
		 ('Emily', 'Burkholder'): 'eburkholder11791',
		 ('Emily', 'Hostetler'): 'ehostetler64634',
		 ('Emily', 'Graber'): 'egraber37973',
		 ('Emily', 'Mast'): 'emast54767',
		 ('Emily', 'Roush'): 'eroush82512',
		 ('Jill', 'Stoltzfus'): 'jstoltzfus59342',
		 ('Jill', 'Byler'): 'jbyler91332',
		 ('Jill', 'Hershberger'): 'jhershberger91439',
		 ('Jill', 'Troyer'): 'jtroyer37288',
		 ('Jill', 'Yoder'): 'jyoder41853',
		 ('Jill', 'Burkholder'): 'jburkholder61178',
		 ('Jill', 'Hostetler'): 'jhostetler37570',
		 ('Jill', 'Graber'): 'jgraber62679',
		 ('Jill', 'Mast'): 'jmast53252',
		 ('Jill', 'Roush'): 'jroush55365',
		 ('Laurie', 'Stoltzfus'): 'lstoltzfus75623',
		 ('Laurie', 'Byler'): 'lbyler99315',
		 ('Laurie', 'Hershberger'): 'lhershberger75060',
		 ('Laurie', 'Troyer'): 'ltroyer41193',
		 ('Laurie', 'Yoder'): 'lyoder57073',
		 ('Laurie', 'Burkholder'): 'lburkholder72749',
		 ('Laurie', 'Hostetler'): 'lhostetler82305',
		 ('Laurie', 'Graber'): 'lgraber15542',
		 ('Laurie', 'Mast'): 'lmast64094',
		 ('Laurie', 'Roush'): 'lroush39950',
		 ('Kristen', 'Stoltzfus'): 'kstoltzfus78182',
		 ('Kristen', 'Byler'): 'kbyler65699',
		 ('Kristen', 'Hershberger'): 'khershberger72488',
		 ('Kristen', 'Troyer'): 'ktroyer18034',
		 ('Kristen', 'Yoder'): 'kyoder51611',
		 ('Kristen', 'Burkholder'): 'kburkholder83164',
		 ('Kristen', 'Hostetler'): 'khostetler33596',
		 ('Kristen', 'Graber'): 'kgraber97752',
		 ('Kristen', 'Mast'): 'kmast4079',
		 ('Kristen', 'Roush'): 'kroush21192',
		 ('Meredith', 'Stoltzfus'): 'mstoltzfus52517',
		 ('Meredith', 'Byler'): 'mbyler37960',
		 ('Meredith', 'Hershberger'): 'mhershberger57069',
		 ('Meredith', 'Troyer'): 'mtroyer51212',
		 ('Meredith', 'Yoder'): 'myoder13131',
		 ('Meredith', 'Burkholder'): 'mburkholder19342',
		 ('Meredith', 'Hostetler'): 'mhostetler46405',
		 ('Meredith', 'Graber'): 'mgraber33204',
		 ('Meredith', 'Mast'): 'mmast46633',
		 ('Meredith', 'Roush'): 'mroush16739',
		 ('Sarah', 'Stoltzfus'): 'sstoltzfus69259',
		 ('Sarah', 'Byler'): 'sbyler28841',
		 ('Sarah', 'Hershberger'): 'shershberger38919',
		 ('Sarah', 'Troyer'): 'stroyer56366',
		 ('Sarah', 'Yoder'): 'syoder6133',
		 ('Sarah', 'Burkholder'): 'sburkholder2447',
		 ('Sarah', 'Hostetler'): 'shostetler98500',
		 ('Sarah', 'Graber'): 'sgraber4694',
		 ('Sarah', 'Mast'): 'smast95108',
		 ('Sarah', 'Roush'): 'sroush78956'}

	try:
		poss_names = [[a,b] for a in names[race][gend] for b in names[race]['Last']]
		poss_names = [n for n in poss_names if n not in existing_names]
		ans = poss_names[np.random.choice(np.arange(len(poss_names)),1)[0]]
		ans += [email_base[tuple(ans)],]
		return ans
		raise ValueError('Race or gender category not valid.')	
	except Exception as e:
		return e 


# # Generate email basess
# name_combos = []
# for race in ['Black','White']:
# 	for gend in ['Male','Female']:
# 			name_combos += [[a,b] for a in names[race][gend] for b in names[race]['Last']]

# email_base = {tuple(a):'{}{}{}'.format(a[0][0].lower(),a[1].lower(),np.random.choice(np.arange(1000,99999),1)[0]) for a in name_combos}
